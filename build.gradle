buildscript {
    ext {
        springBootVersion = '2.5.3'
        springBootAdminVersion = '2.4.3'
        springDependencyVersion = '1.0.11.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyVersion}"
    }

}

allprojects {
    group 'kr.dmoim'
    version '0.1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11
    targetCompatibility = 11

    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-log4j2"
        modules {
            module("org.springframework.boot:spring-boot-starter-logging") {
                replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
            }
        }
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    dependencyManagement {
        imports {
            mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }
}

project(':dmoim-core') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
    }
}

project(':dmoim-cloud:api-gateway') {
    dependencies {
        //implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    }
}

project(':dmoim-cloud:config-server') {
    dependencies {
        //implementation 'org.springframework.cloud:spring-cloud-config-server'
    }
}

project(':dmoim-cloud:service-registry') {
    dependencies {
    }
}

project(':dmoim-cloud:admin-server') {
    dependencies {
        implementation 'de.codecentric:spring-boot-admin-starter-server'
        implementation 'de.codecentric:spring-boot-admin-server-ui'

    }


}

project(':dmoim-app:dmoim-api-user') {
    dependencies {
        implementation project(':dmoim-core')
        compile project(':dmoim-domain:dmoim-domain-user')

        //implementation 'org.springframework.boot:spring-boot-starter-cache'
        //implementation 'org.springframework.cloud:spring-cloud-starter-config'
        //implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        //implementation 'org.springframework.boot:spring-boot-starter-webflux'
        //implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.10'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'de.codecentric:spring-boot-admin-starter-client'
        testImplementation 'io.projectreactor:reactor-test'
    }
}

project(':dmoim-domain:dmoim-domain-user') {
    dependencies {
        implementation project(':dmoim-core')
        compile 'org.springframework.boot:spring-boot-starter-data-r2dbc'
        compile 'org.springframework.boot:spring-boot-starter-validation'
        runtimeOnly 'io.r2dbc:r2dbc-h2'
    }
}